name: 'book-store-application'

services:

  catalog-db:
    image: postgres:17-alpine
    container_name: catalog-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - "15432:5432"
    volumes:
      - catalog-data:/var/lib/postgresql/data
    networks:
      - bookstore-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  orders-db:
    image: postgres:17-alpine
    container_name: orders-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - "25432:5432"
    volumes:
      - orders-data:/var/lib/postgresql/data
    networks:
      - bookstore-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  bookstore-rabbitmq:
    image: rabbitmq:4.0.5-management
    container_name: bookstore-rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - bookstore-network
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 30s
      timeout: 30s
      retries: 10

  notifications-db:
    image: postgres:17-alpine
    container_name: notifications-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - "35432:5432"
    volumes:
      - notification-data:/var/lib/postgresql/data
    networks:
      - bookstore-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  mailhog:
    image: mailhog/mailhog:v1.0.1
    container_name: mailhog
    ports:
      - "1025:1025" #Actual PORT
      - "8025:8025" #GUI PORT
    networks:
      - bookstore-network


  keycloak:
    image: quay.io/keycloak/keycloak:24.0.2
    command: [ 'start-dev', '--import-realm', '--http-port=9191' ]
    container_name: keycloak
    hostname: keycloak
    volumes:
      - ./realm-config:/opt/keycloak/data/import
      - keycloak-data:/opt/keycloak/data
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin1234
    ports:
      - "9191:9191"
    networks:
      - bookstore-network

volumes:
  catalog-data:
  orders-data:
  rabbitmq-data:
  notification-data:
  keycloak-data:

networks:
  bookstore-network:
    driver: bridge